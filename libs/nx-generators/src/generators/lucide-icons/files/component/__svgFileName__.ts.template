import {
  ChangeDetectionStrategy,
  Component,
  ViewEncapsulation,
  input,
} from '@angular/core';

@Component({
  selector: 'svg[<%= svgSelector %>]',
  standalone: true,
  imports: [],
  template: `
    <%- svgTagContent %>
  `,
  host: {
    '[attr.xmlns]': 'xmlns',
  <% if(width) { -%>
    '[attr.width]': 'width()',
  <% } -%>
  <% if(height) { -%>
    '[attr.height]': 'height()',
  <% } -%>
  <% if(viewBox) { -%>
    '[attr.viewBox]': 'viewBox()',
  <% } -%>
  <% if(fill) { -%>
    '[attr.fill]': 'fill()',
  <% } -%>
  <% if(stroke) { -%>
    '[attr.stroke]': 'stroke()',
  <% } -%>
  <% if(strokeWidth) { -%>
    '[attr.stroke-width]': 'strokeWidth()',
  <% } -%>
  <% if(strokeLinecap) { -%>
    '[attr.stroke-linecap]': 'strokeLinecap()',
  <% } -%>
  <% if(strokeLinejoin) { -%>
    '[attr.stroke-linejoin]': 'strokeLinejoin()',
  <% } -%>
    'data-slot': 'icon',
  },
  styles: ``,
  encapsulation: ViewEncapsulation.None,
  changeDetection: ChangeDetectionStrategy.OnPush,
})
export class <%= svgClassName %> {

  protected readonly xmlns = 'http://www.w3.org/2000/svg';

  <% if(width) { -%>
    readonly width = input<string | number>('<%= width %>');
  <% } -%>

  <% if(height) { -%>
      readonly height = input<string | number>('<%= height %>');
  <% } -%>

  <% if(viewBox) { -%>
    readonly viewBox = input<string>('<%= viewBox %>');
  <% } -%>

  <% if(fill) { -%>
    readonly fill = input<string>('<%= fill %>');
  <% } -%>

  <% if(stroke) { -%>
    readonly stroke = input<string>('<%= stroke %>');
  <% } -%>

  <% if(strokeWidth) { -%>
    readonly strokeWidth = input<string | number>('<%= strokeWidth %>', {
      alias: 'stroke-width',
    });
  <% } -%>

  <% if(strokeLinecap) { -%>
    readonly strokeLinecap = input<string>('<%= strokeLinecap %>', {
      alias: 'stroke-linecap',
    });
  <% } -%>

  <% if(strokeLinejoin) { -%>
    readonly strokeLinejoin = input<string>('<%= strokeLinejoin %>', {
      alias: 'stroke-linejoin',
    });
  <% } -%>

}
